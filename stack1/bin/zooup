#!/bin/bash

# Create the network (should already be there with an error for this).
# One node per VM works better without a Docker network; bridging is the next best option.
netup
   
# This could be bad, but it works for dev.
docker stop zoo1

# Cannot recreate with the same name (docker-compose does this on "down").
# Do it on up so the logs are laying about should I want themi.
docker rm zoo1

# --restart 
#   always will restart after a shutdown, if the container is running at the time.
# --net
#   vm-bridge is created by netup; it is what it sounds like.
# -p
#   3888 is used internally for elections and does not seem override-able.
#   2181 is the configurable clientPort.
#   8081 is the configurable admin.serverPort (it's awful, but why not have it?).
#   2888 is the configuralbe data synch port.
# -v
#   make /pulsar/data/zookeeper local for up/down persistence,
#   create /conf for configuration - ours, not Docker's.
#   create /scripts for the startup script (/bin is already used!).
#   create /logs for persistent logs (and it's handy for getting files to/from the container)
# -e
#   point to THE configuration file (only one).
#   set the zookeeper server id (must match the configuration),
# command
#   need scripts for start_zk to create the myid file from ZK_ID and redirect stdout logs
docker run --name zoo1 \
    -d \
    --restart always \
    --net=vm-bridge \
    -p 3888:3888 \
    -p 2181:2181 \
    -p 8081:8081 \
    -p 2888:2888 \
    -v ~/cluster-test/stack1/zookeeper/data:/pulsar/data/zookeeper/ \
    -v ~/cluster-test/stack1/conf:/conf \
    -v ~/cluster-test/stack1/bin:/scripts \
    -v ~/cluster-test/stack1/zookeeper/logs:/logs \
    -e PULSAR_ZK_CONF=/conf/zookeeper.conf \
    -e ZK_ID=1 \
    apachepulsar/pulsar:2.8.1 /bin/bash /scripts/start_zk.sh
